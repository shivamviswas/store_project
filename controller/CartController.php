<?php

include_once '../model/Cart.php';
include_once '../controller/ProductController.php';

class CartController extends Cart
{
    /*`product`(`product_id`, `category_id`, `brnad_id`, `product_name`, `product_description`,
                            `product_unit`, `product_qyt`, `product_base_price`, `product_tax`,
                           `product_mrp`, `product_mini_order`, `product_enter_by`, `product_status`, `date`)*/
    private $product;

    public function  __construct()
    {
       $this->product = new ProductController();
    }

    public function set($product_id, $qyt, $status, $temp_code)
    {

        $row = $this->product->countElement('product_id', $product_id)->fetch(PDO::FETCH_ASSOC);

        if ($row['product_qyt'] >= $qyt) {
            /*($product_id,  $product_name,       $qyt,         $unit,             $price,          $status,$temp_code)*/
            $this->setCart($product_id, $row['product_name'], $qyt, $row['product_unit'], ($row['product_mrp'] * $qyt), $status, $temp_code);
            return 'success';
        } else {
            return 'low_qyt';
        }
    }

    public function get($tem_id)
    {
        return $this->getCartItems($tem_id); // TODO: Change the autogenerated stub
    }

    public function delete()
    {
        return $this->deleteAll();
    }

    public function deleteItem($pro_id, $temp)
    {
        if ($this->deleteCartItem($pro_id, $temp)) {
            return 'success';
        } else {
            return 'failed';
        }

    }

    public function update($pro_id, $temp, $qyt)
    {
        $row = $this->product->countElement('product_id', $pro_id)->fetch(PDO::FETCH_ASSOC);
        if ($row['product_qyt'] >= $qyt) {
            {
                if ($this->updateCart($pro_id, $temp, ($row['product_mrp'] * $qyt), $qyt)) {

                    return 'success';
                } else {
                    return 'failed';
                }
            }
        }
        else {
            return 'low_qyt';
        }
    }

    public function getAll()
    {
        return $this->getAllCartItems();
    }



}